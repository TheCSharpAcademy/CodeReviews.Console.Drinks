// <auto-generated />
using System;
using Drinks.iamnikitakostin.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Drinks.iamnikitakostin.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241231215743_Upd1")]
    partial class Upd1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Drinks.iamnikitakostin.Models.DrinkDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdDrink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdInt")
                        .HasColumnType("int");

                    b.Property<string>("StrAlcoholic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrCreativeCommonsConfirmed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDrink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDrinkAlternate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrDrinkThumb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrGlass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIBA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrImageAttribution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrImageSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrIngredient9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrInstructionsDE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrInstructionsES")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrInstructionsFR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrInstructionsIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrInstructionsZHHANS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrInstructionsZHHANT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrMeasure9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrTags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrVideo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FavoriteCocktails");
                });

            modelBuilder.Entity("Drinks.iamnikitakostin.Models.HistoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DrinkId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("History");
                });
#pragma warning restore 612, 618
        }
    }
}
